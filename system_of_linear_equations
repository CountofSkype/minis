"Решение СЛАУ". На вход подается количество уравнений и коэффициенты.
Выполняется проверка определителя на равенство 0, поскольку в этом случае матрица либо не имеет корней, либо имеет их бесконечное множество.
__________________________________________________________________________________________________________________________________________________________________________________

import numpy as np

n = int(input())
system = [input().split() for equation in range(n)]
M1 = np.array([system[odds][:-1] for odds in range(len(system))], dtype=float)  # Матрица (левая часть системы)
v1 = np.array([system[vector_odds][-1] for vector_odds in range(len(system))], dtype=float)  # Вектор (правая часть системы)
if np.linalg.det(M1) == 0:
    print('Матрица системы вырожденная')
else:
    solution = np.linalg.solve(M1, v1)  # Находим решение системы
    print(*solution)
    
__________________________________________________________________________________________________________________________________________________________________________________
"Найти коэффициенты многочлена". Программа, находящая коэффициенты многочлена n-й степени, проходящего через n + 1 точку: c0 + c1 * x ** 1 + c2 * x ** 2 + ... cn * x ** n.
Программа принимает на вход в 1й строке натуральное число M (M=n + 1) после этого в цикле M строк. Каждая из M строк содержит 2 действительных числа:
x, y - координаты M точек, через которые проходит график многочлена.

На выходе программа выдает через пробел n + 1 (n + 1 = M) коэффициенты многочлена: с0, с1, с2 ... сn
__________________________________________________________________________________________________________________________________________________________________________________

import numpy as np

n = int(input())
system = [input().split() for equation in range(n)]
v1 = [float(system[i][-1]) for i in range(n)]
M1 = [[float(system[i][0]) ** j for j in range(n)] for i in range(n)]
print(*np.linalg.solve(M1, v1))
